import{_ as t,C as p,c as h,o,aF as n,j as i,a,G as l}from"./chunks/framework.DEmh6Vhl.js";const d="/pictures/Win/%E4%BD%BF%E7%94%A8wsl%E6%9F%A5%E7%9C%8B%E7%8E%B0%E6%9C%89%E7%9A%84Linux%E5%8F%91%E8%A1%8C%E7%89%88.png",r="/pictures/Win/wsl-ubuntu.png",k="/pictures/Win/wsl2-ubuntu%E5%90%AF%E7%94%A8.png",c="/pictures/Win/%E7%99%BB%E5%BD%95root%E7%94%A8%E6%88%B7%E7%9A%84%E6%96%B9%E5%BC%8F.png",u="/pictures/Win/%E6%9F%A5%E7%9C%8B%E5%90%AF%E7%94%A8%E7%9A%84linux%E7%B3%BB%E7%BB%9F.png",b="/pictures/Win/%E6%89%93%E5%BC%80SSH-Remote%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png",g="/pictures/Win/ohmyzsh%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.png",F="/pictures/Win/%E9%85%8D%E7%BD%AEMSYS2%E5%88%B0%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png",m="/pictures/Win/MSYS2%E9%85%8D%E7%BD%AE%E9%80%89%E9%A1%B9.png",E="/pictures/Win/%E8%AE%BE%E7%BD%AEMSYS2%E9%85%8D%E7%BD%AE%E7%95%8C%E9%9D%A2%E4%B8%BA%E4%B8%AD%E6%96%87.png",y="/pictures/Win/%E4%B8%AD%E6%96%87%E7%95%8C%E9%9D%A2.png",C="/pictures/Win/%E9%85%8D%E7%BD%AE%E7%BB%88%E7%AB%AF%E4%B8%AA%E6%80%A7%E5%8C%96%E7%AB%AF%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png",B="/pictures/Win/%E9%85%8D%E7%BD%AEgit%E5%88%B0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png",v="/pictures/Win/%E4%B8%8B%E8%BD%BDzsh%E5%AE%89%E8%A3%85%E5%8C%85%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6.png",q="/pictures/Win/zsh%E7%9A%84%E8%84%9A%E6%9C%AC%E6%96%87%E4%BB%B6.png",S="/pictures/Win/zsh%E5%88%9D%E5%A7%8B%E7%95%8C%E9%9D%A2.png",A="/pictures/Win/zsh%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.png",z="/pictures/Win/%E9%85%8D%E7%BD%AEbashrc%E9%BB%98%E8%AE%A4%E4%BD%BF%E7%94%A8zsh.png",_="/pictures/Win/%E5%85%8B%E9%9A%86%E5%AE%89%E8%A3%85oh-my-zsh.png",x="/pictures/Win/oh-my-zsh%E6%96%87%E4%BB%B6%E5%A4%B9%E6%94%BE%E7%BD%AE%E4%BD%8D%E7%BD%AE.png",w="/pictures/Win/oh-my-zsh%E7%9A%84install%E8%84%9A%E6%9C%AC%E4%BD%8D%E7%BD%AE.png",f="/pictures/Win/oh-my-zsh%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%E7%95%8C%E9%9D%A2.png",D="/pictures/Win/%E9%85%8D%E7%BD%AEzsh%E4%B8%BB%E9%A2%98.png",P="/pictures/Win/%E5%AE%89%E8%A3%85%E5%A4%96%E9%83%A8%E6%89%A9%E5%B1%95zsh%E4%B8%BB%E9%A2%98.png",T="/pictures/Win/%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE%E9%A1%BB%E7%9F%A5.png",W="/pictures/Win/zsh%E9%85%8D%E7%BD%AE%E5%86%85%E7%BD%AE%E6%8F%92%E4%BB%B6.png",$="/pictures/Win/%E8%AE%BE%E7%BD%AE%E5%9C%B0%E5%8C%BA%E5%92%8C%E8%AF%AD%E8%A8%80.png",L="/pictures/Win/%E6%B5%8B%E8%AF%95ssh%E9%85%8D%E7%BD%AE.png",ss=JSON.parse('{"title":"WSL2安装 & ZSH 安装","description":"","frontmatter":{},"headers":[],"relativePath":"资源/开发工具/开源工具/zsh安装.md","filePath":"资源/开发工具/开源工具/zsh安装.md","lastUpdated":1744689573000}'),H={name:"资源/开发工具/开源工具/zsh安装.md"},M={id:"启用-wsl-功能",tabindex:"-1"},Y={id:"设置-wsl-版本为-wsl2",tabindex:"-1"},V={id:"查看在线的-linux-发行版",tabindex:"-1"},I={id:"安装子系统",tabindex:"-1"},N={id:"启动和设置-linux-发行版",tabindex:"-1"},R={id:"命令行启动指定的系统",tabindex:"-1"},Z={class:"tip custom-block"},U={class:"warning custom-block"};function G(O,s,j,J,K,Q){const e=p("Badge");return o(),h("div",null,[s[33]||(s[33]=n('<h1 id="wsl2安装-zsh-安装" tabindex="-1"><code>WSL2</code>安装 &amp; <code>ZSH</code> 安装 <a class="header-anchor" href="#wsl2安装-zsh-安装" aria-label="Permalink to &quot;`WSL2`安装 &amp; `ZSH` 安装&quot;">​</a></h1><h2 id="wsl2-安装" tabindex="-1"><code>WSL2</code> 安装 <a class="header-anchor" href="#wsl2-安装" aria-label="Permalink to &quot;`WSL2` 安装&quot;">​</a></h2><h3 id="确保你的-windows-版本支持-wsl2" tabindex="-1">确保你的 Windows 版本支持 WSL2 <a class="header-anchor" href="#确保你的-windows-版本支持-wsl2" aria-label="Permalink to &quot;确保你的 Windows 版本支持 WSL2&quot;">​</a></h3><blockquote><p><code>win + R</code>输入<code>winver</code>, 或者在<code>cmd</code>终端窗口输入<code>winver</code>会弹出一个窗口显示你的 Windows 版本信息。</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> winver</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',5)),i("h3",M,[s[0]||(s[0]=a("启用 WSL 功能")),l(e,{type:"tip",text:"required"}),s[1]||(s[1]=a()),s[2]||(s[2]=i("a",{class:"header-anchor",href:"#启用-wsl-功能","aria-label":'Permalink to "启用 WSL 功能<Badge type="tip" text="required" />"'},"​",-1))]),s[34]||(s[34]=n('<blockquote><p>管理员身份打开<code>PowerShell</code>(如果这个运行不了)或者打开<code>cmd</code>运行下面的命令:</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',2)),i("h3",Y,[s[3]||(s[3]=a("设置 WSL 版本为 WSL2")),l(e,{type:"tip",text:"required"}),s[4]||(s[4]=a()),s[5]||(s[5]=i("a",{class:"header-anchor",href:"#设置-wsl-版本为-wsl2","aria-label":'Permalink to "设置 WSL 版本为 WSL2<Badge type="tip" text="required" />"'},"​",-1))]),s[35]||(s[35]=n('<blockquote><p>设置默认 WSL 版本为 2</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --set-default-version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',2)),i("h3",V,[s[6]||(s[6]=a("查看在线的 Linux 发行版")),l(e,{type:"tip",text:"required"}),s[7]||(s[7]=a()),s[8]||(s[8]=i("a",{class:"header-anchor",href:"#查看在线的-linux-发行版","aria-label":'Permalink to "查看在线的 Linux 发行版<Badge type="tip" text="required" />"'},"​",-1))]),s[36]||(s[36]=n('<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --online</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+d+`" alt="Linux发行版" loading="lazy"></p><h3 id="查看已安装的-linux-发行版" tabindex="-1">查看已安装的 Linux 发行版 <a class="header-anchor" href="#查看已安装的-linux-发行版" aria-label="Permalink to &quot;查看已安装的 Linux 发行版&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者简写</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,4)),i("h3",I,[s[9]||(s[9]=a("安装子系统")),l(e,{type:"tip",text:"required"}),s[10]||(s[10]=a()),s[11]||(s[11]=i("a",{class:"header-anchor",href:"#安装子系统","aria-label":'Permalink to "安装子系统<Badge type="tip" text="required" />"'},"​",-1))]),s[37]||(s[37]=n('<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ubuntu</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div>',1)),i("h3",N,[s[12]||(s[12]=a("启动和设置 Linux 发行版")),l(e,{type:"tip",text:"required"}),s[13]||(s[13]=a()),s[14]||(s[14]=i("a",{class:"header-anchor",href:"#启动和设置-linux-发行版","aria-label":'Permalink to "启动和设置 Linux 发行版<Badge type="tip" text="required" />"'},"​",-1))]),s[38]||(s[38]=i("ol",null,[i("li",null,"启动安装的 Linux 发行版：")],-1)),s[39]||(s[39]=i("blockquote",null,[i("p",null,"在开始菜单中找到你安装的 Linux 发行版，点击启动。")],-1)),s[40]||(s[40]=i("p",null,[i("img",{src:r,alt:"wsl-ubuntu",loading:"lazy"})],-1)),s[41]||(s[41]=i("ol",{start:"2"},[i("li",null,"初次设置：")],-1)),s[42]||(s[42]=i("blockquote",null,[i("p",null,"按照提示创建用户和密码。")],-1)),s[43]||(s[43]=i("p",null,[i("img",{src:k,alt:"wsl-ubuntu启用",loading:"lazy"})],-1)),i("h3",R,[s[15]||(s[15]=a("命令行启动指定的系统")),l(e,{type:"tip",text:"required"}),s[16]||(s[16]=a()),s[17]||(s[17]=i("a",{class:"header-anchor",href:"#命令行启动指定的系统","aria-label":'Permalink to "命令行启动指定的系统<Badge type="tip" text="required" />"'},"​",-1))]),s[44]||(s[44]=n(`<blockquote><p>默认登录用户就是刚刚创建的用户</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ubuntu</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="登录root用户" tabindex="-1">登录root用户 <a class="header-anchor" href="#登录root用户" aria-label="Permalink to &quot;登录root用户&quot;">​</a></h3><blockquote><p>默认创建系统的时候, root用户是没有设置密码的, 可以在 <code>cmd</code> 窗口通过下面的命令直接登录 root 用户, 如果 root 用户设置了密码, 下面的命令也可以直接登录 root 用户。设置 <code>root</code> 密码只在<code>wsl</code>系统中切换用户才会使用到。</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ubuntu</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="更改普通用户的密码" tabindex="-1">更改普通用户的密码 <a class="header-anchor" href="#更改普通用户的密码" aria-label="Permalink to &quot;更改普通用户的密码&quot;">​</a></h3><blockquote><p>通过上面的命令登录 root 用户后, 执行下面的命令<code>passwd 普通用户名</code>即可直接修改新密码</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> passwd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zhouyu</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="更改-root-用户密码" tabindex="-1">更改 root 用户密码 <a class="header-anchor" href="#更改-root-用户密码" aria-label="Permalink to &quot;更改 root 用户密码&quot;">​</a></h3><blockquote><p>正常打开 Ubuntu 系统, 然后执行下面的命令</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> su</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> su</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="`+c+`" alt="登录root用户的方式" loading="lazy"></p><h3 id="查看-wsl-版本" tabindex="-1">查看 WSL 版本 <a class="header-anchor" href="#查看-wsl-版本" aria-label="Permalink to &quot;查看 WSL 版本&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --verbose</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者简写</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="两个系统环境隔离" tabindex="-1">两个系统环境隔离 <a class="header-anchor" href="#两个系统环境隔离" aria-label="Permalink to &quot;两个系统环境隔离&quot;">​</a></h3>`,15)),i("div",Z,[s[20]||(s[20]=i("p",{class:"custom-block-title"},"提示",-1)),i("ul",null,[s[19]||(s[19]=i("li",null,[a("安装完 "),i("code",null,"WSL"),a(" 系统后, 就可以把 Windows 当成 "),i("code",null,"Linux"),a(" 使用了, 但是需要注意的是 "),i("code",null,"WSL"),a(" 是一个隔离的系统环境，与 "),i("code",null,"Windows"),a(" 的文件系统是隔离的。")],-1)),i("li",null,[l(e,{text:"注意:",type:"warning"}),s[18]||(s[18]=n(" <code>Windows</code>系统中设置的环境变量以及安装的工具在<code>WSL</code>环境中无法使用。<code>WSL</code>是一个全新的隔离的系统，需要在<code>WSL</code>系统中重新安装环境！比如你的windows上安装了 <code>nodejs</code> 环境或者 <code>python</code> 环境等，但是在 <code>WSL</code> 中无法使用这些工具，(1)要么给这个系统重新安装环境，(2)要么通过 <code>/mnt/</code> 下的磁盘去找到该环境启动。推荐使用第 <code>(1)</code> 种方式吧。隔离的系统，就应该真正做到环境隔离！",19))])])]),s[45]||(s[45]=n('<h3 id="如何访问其他磁盘" tabindex="-1">如何访问其他磁盘? <a class="header-anchor" href="#如何访问其他磁盘" aria-label="Permalink to &quot;如何访问其他磁盘?&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">说明</p><ul><li><code>WSL</code> 会自动将 Windows 文件系统的各个磁盘挂载到 <code>/mnt/</code> 目录下。使用 cd 命令访问各个磁盘及其目录，享受 Linux 环境与 Windows 系统文件的无缝集成。</li></ul></div><p><img src="'+u+'" alt="查看启用的linux系统" loading="lazy"></p><blockquote><p><code>*</code> 标识的表示当前正在使用的版本。</p></blockquote><h3 id="检查-wsl-的整体版本" tabindex="-1">检查 WSL 的整体版本 <a class="header-anchor" href="#检查-wsl-的整体版本" aria-label="Permalink to &quot;检查 WSL 的整体版本&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wsl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --status</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="配置wsl的ssh连接" tabindex="-1">配置<code>WSL</code>的<code>SSH</code>连接 <a class="header-anchor" href="#配置wsl的ssh连接" aria-label="Permalink to &quot;配置`WSL`的`SSH`连接&quot;">​</a></h2><h3 id="安装-ssh-服务" tabindex="-1">安装 SSH 服务 <a class="header-anchor" href="#安装-ssh-服务" aria-label="Permalink to &quot;安装 SSH 服务&quot;">​</a></h3><blockquote><p>如果你还没有安装 SSH 服务，请使用以下命令进行安装：</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssh-server</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="配置ssh服务允许root登录" tabindex="-1">配置SSH服务允许root登录 <a class="header-anchor" href="#配置ssh服务允许root登录" aria-label="Permalink to &quot;配置SSH服务允许root登录&quot;">​</a></h3><blockquote><p>有时，SSH 默认会禁用 root 登录。你可以编辑 SSH 配置文件来允许 root 登录：</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/ssh/sshd_config</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 找到下面这行内容</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># PermitRootLogin prohibit-password</span></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 修改为, 保存并退出</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">PermitRootLogin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yes</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="启动-ssh-服务" tabindex="-1">启动 <code>SSH</code> 服务 <a class="header-anchor" href="#启动-ssh-服务" aria-label="Permalink to &quot;启动 `SSH` 服务&quot;">​</a></h3><blockquote><p>进行配置更改后，重启 SSH 服务以应用更改：</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="通过ssh方式连接wsl" tabindex="-1">通过<code>ssh</code>方式连接<code>WSL</code> <a class="header-anchor" href="#通过ssh方式连接wsl" aria-label="Permalink to &quot;通过`ssh`方式连接`WSL`&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li><code>VSCode</code>中按快捷键<code>Ctrl + Shift + P</code> 打开命令行窗口, 搜索<code>打开SSH</code>就可以选择<code>SSH-Remote</code>插件的配置文件进行配置<code>SSH</code>连接</li></ul></div><p><img src="'+b+`" alt="打开SSH-Remote配置文件" loading="lazy"></p><p>安装VSCode的<code>SSH-Remote</code>插件，配置<code>ip</code>和用户名进行登录, 在连接的时候会提示输入密码。</p><div class="language-md vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host 192.168.83.64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  HostName 192.168.83.64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  User root</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-light-font-weight:bold;--shiki-dark:#79B8FF;--shiki-dark-font-weight:bold;"># 这是我的另一台云服务器, 通过私钥文件免密登录的方式, 没有私钥文件提供就通过密码的方式登录即可</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host 47.120.28.25</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  HostName 47.120.28.25</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  User root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  IdentityFile ~/.ssh/aliyunserverkey.pem</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li>推荐: 通过<code>秘钥</code>的方式进行连接(自动加载, 以后无需重复输入密码连接)</li></ul><ol><li>本地生成秘钥</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2048</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>复制公钥放到服务器</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_ed25519.pub</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>将公钥复制到服务器的<code>authorized_keys</code>文件中</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/authorized_keys</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 把公钥复制到这里,保存退出</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="4"><li>本地<code>SSH-Remote</code>的连接配置</li></ol><div class="language-md vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Host 192.168.83.64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  HostName 192.168.83.64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  User root</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  IdentityFile ~/.ssh/id_ed25519</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="使用秘钥登录的原理介绍" tabindex="-1">使用秘钥登录的原理介绍 <a class="header-anchor" href="#使用秘钥登录的原理介绍" aria-label="Permalink to &quot;使用秘钥登录的原理介绍&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">说明</p><ul><li>使用 SSH 密钥登录的原理是基于公钥密码学（也称为非对称加密），它提供了一种安全的身份验证方式，比传统的密码登录更加安全。</li></ul></div><ul><li>SSH 密钥登录的基本概念</li></ul><ol><li>公钥和私钥：</li></ol><div class="info custom-block"><p class="custom-block-title">提示</p><ul><li>公钥：可以公开分享的密钥，放在服务器上。</li><li>私钥：保存在客户端（用户本地计算机）上的密钥，必须保密。</li></ul></div><ol start="2"><li>密钥对</li></ol><blockquote><p>密钥对：SSH 密钥是成对生成的，包括一个公钥和一个私钥。用户可以使用 ssh-keygen 命令生成一对密钥。</p></blockquote><ul><li>SSH 密钥登录的过程</li></ul><details class="details custom-block"><summary>详情</summary><ol><li>密钥对生成：</li></ol><blockquote><p>用户在本地计算机上生成一对密钥，公钥和私钥。这通常通过命令 ssh-keygen 实现。</p></blockquote><ol start="2"><li>安装公钥：</li></ol><blockquote><p>将生成的公钥复制到远程服务器的 ~/.ssh/authorized_keys 文件中。这可以通过命令 ssh-copy-id 或手动方式完成。</p></blockquote><ol start="3"><li>建立连接：</li></ol><blockquote><p>用户使用 SSH 客户端尝试连接到远程服务器，SSH 客户端会发送一条请求到服务器。</p></blockquote><ol start="4"><li>服务器验证：</li></ol><blockquote><p>服务器查找连接用户的公钥是否在 ~/.ssh/authorized_keys 文件中。如果找到了，服务器会生成一个随机数（挑战）并用该公钥加密这个随机数，然后将其发送给客户端。</p></blockquote><ol start="5"><li>客户端响应：</li></ol><blockquote><p>客户端使用其私钥解密这个随机数，得到明文的挑战，然后将这个明文返回给服务器。</p></blockquote><ol start="6"><li>服务器验证响应：</li></ol><blockquote><p>服务器检查客户端返回的明文挑战是否正确。如果正确，服务器认为身份验证成功，允许连接。</p></blockquote><ol start="7"><li>安全会话建立：</li></ol><blockquote><p>一旦身份验证成功，SSH 协议将建立一个加密的会话，确保数据在传输过程中是安全的。</p></blockquote></details><ul><li>优势</li></ul><div class="info custom-block"><p class="custom-block-title">说明</p><ul><li>安全性：即使公钥被盗，攻击者也无法访问服务器，因为没有对应的私钥。</li><li>方便性：用户不需要每次输入密码，可以使用 SSH 密钥轻松登录。</li><li>抵御暴力破解：使用密钥的方式可以避免传统密码被暴力破解的风险。</li></ul></div><ul><li>具体步骤如下:</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># # 生成密钥对</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ed25519</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your_email@example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 复制公钥内容放到服务器的 ~/.ssh/authorized_keys</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_ed25519.pub</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 本地配置连接时要用来解密的私钥文件</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="msys2环境安装-zsh-工具" tabindex="-1"><code>MSYS2</code>环境安装 <code>zsh</code> 工具 <a class="header-anchor" href="#msys2环境安装-zsh-工具" aria-label="Permalink to &quot;\`MSYS2\`环境安装 \`zsh\` 工具&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">前言</p><p>可以这样认为，这个工具提供了类<code>Unix</code>环境，将<code>windows</code>环境与该环境隔离，所以在<code>MSYS2</code>环境外部是无法访问<code>windows</code>上配置好的环境变量的。在该环境中，建议直接当一台微型版的<code>Linux</code>系统来使用。常用的<code>Linux</code>命令在该环境中都默认提供了，比如<code>ls</code>、<code>pwd</code>、<code>df</code>等等。没有的话，可以尝试搜索一下<code>MSYS2</code>的仓库中是否有提供。常用的都有，比如<code>git</code>、<code>gcc</code>、<code>zsh</code>、<code>tmux</code>(终端分屏工具)等。</p><p><code>windows</code>上安装的<code>git bash</code>终端工具不能使用<code>tmux</code>终端分屏工具，所以特意安装<code>MSYS2</code>这个集成终端工具来玩的。</p></div><div class="info custom-block"><p class="custom-block-title">资源官网</p><ul><li><a href="https://www.msys2.org/" target="_blank" rel="noreferrer">MSYS2官网</a></li><li><a href="https://github.com/ohmyzsh/ohmyzsh" target="_blank" rel="noreferrer">ohmyzsh仓库</a></li></ul></div><h3 id="安装msys2工具" tabindex="-1">安装<code>MSYS2</code>工具 <a class="header-anchor" href="#安装msys2工具" aria-label="Permalink to &quot;安装\`MSYS2\`工具&quot;">​</a></h3><blockquote><p>按照官网的安装步骤操作即可</p></blockquote><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-label="Permalink to &quot;&quot;">​</a></h3><h3 id="安装zsh工具" tabindex="-1">安装<code>zsh</code>工具 <a class="header-anchor" href="#安装zsh工具" aria-label="Permalink to &quot;安装\`zsh\`工具&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">示例</p><p><code>MSYS2</code>官网默认提供了很多开源工具，可以通过<code>pacman -S 工具名称</code>搜索，例如<code>pacman -S zsh</code></p></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 打开MSYS2终端界面，安装zsh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="安装vim和git工具" tabindex="-1">安装<code>vim</code>和<code>git</code>工具 <a class="header-anchor" href="#安装vim和git工具" aria-label="Permalink to &quot;安装\`vim\`和\`git\`工具&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="安装oh-my-zsh" tabindex="-1">安装<code>oh-my-zsh</code> <a class="header-anchor" href="#安装oh-my-zsh" aria-label="Permalink to &quot;安装\`oh-my-zsh\`&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">说明</p><p>上面安装了<code>git</code>工具后，就可以通过<code>oh-my-zsh</code>仓库说明文档里的安装说明进行安装了，在安装过程中需要使用<code>git</code>工具进行将仓库代码克隆到本地，这样不需要自己去<code>github</code>上手动下载了，所以一定要给<code>MSYS2</code>安装<code>git</code>扩展工具。</p></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装命令</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://install.ohmyz.sh/)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+g+'" alt="ohmyzsh安装完成" loading="lazy"></p><blockquote><p>安装完成后，在刚才<code>MSYS2</code>默认安装的根目录下的<code>home &gt; 用户名</code>子目录中，会看到一个<code>.oh-my-zsh</code>文件夹，里面就是<code>oh-my-zsh</code>的配置文件。包含主题、插件、更新工具等。</p></blockquote><h3 id="配置msys2到系统环境变量" tabindex="-1">配置<code>MSYS2</code>到系统环境变量 <a class="header-anchor" href="#配置msys2到系统环境变量" aria-label="Permalink to &quot;配置`MSYS2`到系统环境变量&quot;">​</a></h3><blockquote><p>这样方便在<code>windows</code>系统环境变量可用的终端中执行启动<code>MSYS2</code>终端工具的命令。</p></blockquote><p><img src="'+F+'" alt="配置MSYS2到系统环境变量" loading="lazy"></p><h3 id="配置msys2终端主题" tabindex="-1">配置<code>MSYS2</code>终端主题 <a class="header-anchor" href="#配置msys2终端主题" aria-label="Permalink to &quot;配置`MSYS2`终端主题&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">提示</p><ul><li>类似于<code>windows</code>的<code>cmd</code>窗口，可以配置背景色、前景色等，<code>MSYS2</code>工具也支持在线配置主题并导出主题文件来设置本地的主题。下面的配置链接可以在<code>MSYS2</code>终端窗口顶部右击配置主题时获得。</li><li>推荐：<a href="https://ciembor.github.io/4bit/#" target="_blank" rel="noreferrer">官方提供的主题配置</a></li></ul></div><p><img src="'+m+'" alt="MSYS2配置选项" loading="lazy"></p><h3 id="配置msys2中文语言" tabindex="-1">配置<code>MSYS2</code>中文语言 <a class="header-anchor" href="#配置msys2中文语言" aria-label="Permalink to &quot;配置`MSYS2`中文语言&quot;">​</a></h3><p><img src="'+E+'" alt="设置MSYS2配置界面为中文" loading="lazy"></p><blockquote><p>设置为中文语言后，不止<code>MSYS2</code>终端的界面变成中文了，连<code>命令帮助文档</code>都是中文的了</p></blockquote><p><img src="'+y+'" alt="中文界面" loading="lazy"></p><h3 id="设置msys2终端到cmd个性化配置" tabindex="-1">设置<code>MSYS2</code>终端到<code>cmd</code>个性化配置 <a class="header-anchor" href="#设置msys2终端到cmd个性化配置" aria-label="Permalink to &quot;设置`MSYS2`终端到`cmd`个性化配置&quot;">​</a></h3><p><img src="'+C+`" alt="配置终端个性化" loading="lazy"></p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  	&quot;profiles&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		&quot;defaults&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {},</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">		&quot;list&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;guid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{17da3cac-b318-431e-8a3e-7fcdefe6d114}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MSYS / zsh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;commandline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/msys64/msys2_shell.cmd -defterm -here -no-start -ucrt64 -shell zsh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;startingDirectory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/msys64/home/%USERNAME%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/msys64/msys2.ico&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;font&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;face&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Lucida Console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;guid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{71160544-14d8-4194-af25-d05feeac7233}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;MSYS / MSYS2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;commandline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/msys64/msys2_shell.cmd -defterm -here -no-start -msys&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;startingDirectory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/msys64/home/%USERNAME%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:/msys64/msys2.ico&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;font&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;face&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Lucida Console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">温馨提醒</p><p>建议还是不要单独安装<code>MSYS2</code>了吧，因为<code>windows</code>终端也自带有分屏的功能。因为环境隔离，使用起来还是有点不方便。要集成到<code>VSCode</code>里面做终端还要做很多配置，有点麻烦。算了算了。</p></div><h2 id="git-bash安装-zsh-工具" tabindex="-1"><code>Git Bash</code>安装 <code>zsh</code> 工具 <a class="header-anchor" href="#git-bash安装-zsh-工具" aria-label="Permalink to &quot;\`Git Bash\`安装 \`zsh\` 工具&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">推荐</p><ul><li>前往： <a href="https://git-scm.com/" target="_blank" rel="noreferrer">git官网</a></li><li>前往： <a href="https://packages.msys2.org/packages/zsh?repo=msys&amp;variant=x86_64" target="_blank" rel="noreferrer">zsh安装包下载官网</a></li></ul></div><h3 id="安装git工具" tabindex="-1">安装<code>Git</code>工具 <a class="header-anchor" href="#安装git工具" aria-label="Permalink to &quot;安装\`Git\`工具&quot;">​</a></h3><blockquote><p>前往: <a href="https://git-scm.com/" target="_blank" rel="noreferrer">官网</a>, 下载之后点击下一步下一步安装即可。</p></blockquote><h3 id="配置git到环境变量" tabindex="-1">配置<code>git</code>到环境变量 <a class="header-anchor" href="#配置git到环境变量" aria-label="Permalink to &quot;配置\`git\`到环境变量&quot;">​</a></h3><p><img src="`+B+'" alt="配置git到环境变量" loading="lazy"></p><h3 id="下载安装包" tabindex="-1">下载安装包 <a class="header-anchor" href="#下载安装包" aria-label="Permalink to &quot;下载安装包&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">步骤</p><p>下载<code>zsh</code>工具的安装包放到<code>git</code>安装的根目录。</p></div><p><img src="'+v+'" alt="zsh初始界面" loading="lazy"></p><h3 id="解压安装包" tabindex="-1">解压安装包 <a class="header-anchor" href="#解压安装包" aria-label="Permalink to &quot;解压安装包&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">步骤</p><p>在<code>git</code>根目录将<code>zsh</code>的安装包<code>解压到当前文件夹</code>，解压之后，安装包压缩文件中的文件与<code>git</code>具有相同同名的文件夹会自动进行合并，其中<code>zsh</code>的工具<code>zsh.sh</code>就放到了<code>git</code>根目录下的<code>bin</code>目录中。所以当我们在使用<code>bash</code>终端时，输入<code>zsh</code>就可以找到<code>zsh.sh</code>这个脚本文件执行。</p></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+q+'" alt="zsh的脚本文件" loading="lazy"></p><h3 id="初始化-zsh-配置文件" tabindex="-1">初始化 zsh 配置文件 <a class="header-anchor" href="#初始化-zsh-配置文件" aria-label="Permalink to &quot;初始化 zsh 配置文件&quot;">​</a></h3><blockquote><p>打开<code>cmd</code>窗口，进入<code>Git</code>安装的根目录，执行<code>zsh</code>命令，初次执行会弹出初始化提示的界面，按<code>0</code>结束弹窗。之后会自动在<code>Windows</code>的用户目录下创建了一个<code>.zshrc</code>配置文件。</p></blockquote><p><img src="'+S+'" alt="zsh初始界面" loading="lazy"></p><p><img src="'+A+'" alt="zsh配置文件" loading="lazy"></p><h3 id="设置git终端默认使用zsh工具" tabindex="-1">设置<code>git</code>终端默认使用<code>zsh</code>工具 <a class="header-anchor" href="#设置git终端默认使用zsh工具" aria-label="Permalink to &quot;设置`git`终端默认使用`zsh`工具&quot;">​</a></h3><p>打开<code>bash</code>的配置文件</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>输入下面的代码，然后按<code>:wq</code>保存退出</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><img src="'+z+'" alt="配置bashrc默认使用zsh" loading="lazy"></p><h3 id="安装扩展zsh终端主题的on-my-zsh工具" tabindex="-1">安装扩展<code>zsh</code>终端主题的<code>on my zsh</code>工具 <a class="header-anchor" href="#安装扩展zsh终端主题的on-my-zsh工具" aria-label="Permalink to &quot;安装扩展`zsh`终端主题的`on my zsh`工具&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">目录文件</p><ul><li><code>lib</code>： 提供了核心功能的脚本库</li><li><code>tools</code>： 提供安装、升级等功能的快捷工具</li><li><code>plugins</code>： 自带插件的存在放位置</li><li><code>templates</code>： 自带模板的存在放位置</li><li><code>themes</code>： 自带主题文件的存在放位置</li><li><code>custom</code>： 个性化配置目录，自安装的插件和主题可放这里</li></ul></div><ul><li>在线安装</li></ul><div class="warning custom-block"><p class="custom-block-title">注意</p><p>在线安装可能由于网络原因会出现不稳定中断的故障，但是可以多尝试两次执行下面的命令，后面下载时会利用前面的缓存接着下载，这样就可能成功，我就是这样操作的。</p></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+_+'" alt="克隆安装oh-my-zsh" loading="lazy"></p><ul><li>离线安装</li></ul>',103)),i("div",U,[s[27]||(s[27]=n('<p class="custom-block-title">注意</p><p>如果在线安装总是有问题，那就前往<code>Oh-My-Zsh</code>仓库下载安装包。放到用户下，同<code>AppData</code>同级，重命名为<code>.oh-my-zsh</code>。</p><p>在下面的截图中也可以看到，我刚刚通过<code>在线安装</code>方式获取到的安装脚本<code>install.sh</code>，安装脚本执行后其实也是下载<code>oh-my-zsh</code>仓库中的文件放到了用户目录下的<code>.oh-my-zsh</code>的文件夹中。</p><p>下载的解压之后，得到的<code>.oh-my-zsh</code>文件夹，里面有一个<code>tools</code>子文件夹，在这个目录中有<code>install.sh</code>安装脚本，在命令行通过<code>sh install.sh</code>执行这个脚本即可完成安装。</p>',4)),i("blockquote",null,[i("p",null,[s[21]||(s[21]=a("推荐：")),s[22]||(s[22]=i("a",{href:"https://github.com/ohmyzsh/ohmyzsh",target:"_blank",rel:"noreferrer"},"前往Oh-My-Zsh仓库",-1)),s[23]||(s[23]=a()),l(e,{type:"tip",text:"github"})])]),i("blockquote",null,[i("p",null,[s[24]||(s[24]=a("推荐：")),s[25]||(s[25]=i("a",{href:"https://gitee.com/mirrors/oh-my-zsh",target:"_blank",rel:"noreferrer"},"前往Oh-My-Zsh仓库",-1)),s[26]||(s[26]=a()),l(e,{type:"tip",text:"gitee"})])])]),s[46]||(s[46]=n('<p><img src="'+x+'" alt="oh-my-zsh文件夹放置位置" loading="lazy"></p><p><img src="'+w+'" alt="oh-my-zsh的install脚本位置" loading="lazy"></p><ul><li>成功安装</li></ul><blockquote><p>红色的警告信息不用管，那是因为你在家目录下还没有对<code>bash</code>做配置文件<code>.bashrc</code>或者其他相关的个性化配置文件等。可以看到，成功安装后，左边的提示命令符变成<code>箭头图标</code>了。</p></blockquote><p><img src="'+f+'" alt="oh-my-zsh安装成功界面" loading="lazy"></p><h3 id="配置oh-my-zsh主题" tabindex="-1">配置<code>Oh-My-Zsh</code>主题 <a class="header-anchor" href="#配置oh-my-zsh主题" aria-label="Permalink to &quot;配置`Oh-My-Zsh`主题&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><p>通过上面的安装，已经获得了<code>Oh-My-Zsh</code>提供的所有主题以及插件等。接下来可以自由选择性地配置自己想要的主题了。</p><p>只需要在<code>.zshrc</code>配置文件的<code>ZSH_THEME</code>字段指定<code>.oh-my-zsh</code>目录下的<code>themes</code>文件夹中的<code>主题文件名称</code>即可启用指定的内部扩展主题。</p><p>关于主题名称和示例，请看这里：<a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Themes" target="_blank" rel="noreferrer">内部扩展主题示例</a>，想要安装更多外部主题请看这里: <a href="https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes" target="_blank" rel="noreferrer">外部扩展主题</a>，每个外部扩展主题示例下面有对应存储仓库的链接，点击链接进入该主题的存储仓库，会有相应的安装教程！</p></div><ul><li>打开<code>zsh</code>的配置文件</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshrc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+D+'" alt="配置zsh主题" loading="lazy"></p><ul><li>安装外部扩展主题</li></ul><blockquote><p>克隆(github下载)主题仓库到本地，或者<strong>直接下载主题仓库中提供的 xxx.zsh-theme</strong>这个文件，免得浪费时间下载一个仓库大半天，然后将<code>*.zsh-theme</code>的主题文件，放到<code>.oh-my-zsh</code>目录下的<code>themes</code>文件夹中，文件名(不含后缀)作为主题名称配置到<code>~/.zshrc</code>文件中的<code>ZSH_THEME</code>字段即可。</p></blockquote><p><img src="'+P+'" alt="安装外部扩展zsh主题" loading="lazy"></p><blockquote><p>在<code>~/.zshrc</code>配置文件中配置了<code>ZSH_THEME</code>主题的字段后，要使用命令 <code>source ~/.zshrc</code> 重新加载一下配置文件。</p></blockquote><h3 id="配置插件" tabindex="-1">配置插件 <a class="header-anchor" href="#配置插件" aria-label="Permalink to &quot;配置插件&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">说明</p><ul><li><p><code>Oh-My-Zsh</code>提供了两种插件，一种是内置提供的插件，放在 <code>~/.oh-my-zsh/plugins</code> 目录中；第二种是自定义或第三方扩展插件，应该放在 <code>~/.oh-my-zsh/custom/plugins</code> 目录中。</p></li><li><p><code>Oh-My-Zsh</code>提供了全局环境变量<code>$ZSH_CUSTOM</code> 表示 <code>自定义插件放置路径</code>，即<code>~/.oh-my-zsh/custom</code>。</p></li><li><p>插件可以配置多个，在<code>plugins</code>的列表里面里面添加，以<code>空格</code>分隔开就行了。</p></li><li><p>注意：插件的名称是<code>插件所在目录的名称</code>，如下图所示！</p></li></ul><p>下面通过两个例子来演示如何安装<code>第三方扩展插件</code>。</p></div><blockquote><p>插件配置只需要填写<code>插件所在目录</code>即可，默认约定<code>插件目录名称</code>就是插件名称，实际的插件名称应该以<code>.plguin.zsh</code>结尾。</p></blockquote><p><img src="'+T+'" alt="插件配置须知" loading="lazy"></p><ul><li>内置插件配置</li></ul><blockquote><p>找到 <code>~/.oh-my-zsh/plugins</code>中的插件名称，添加到 <code>~/.zshrc</code>中的 <code>plugins</code> 字段进行配置即可。</p><p><code>z</code>和<code>git</code>都是内置的，<code>z</code>用于直达之前<code>cd</code>过的目录。</p></blockquote><p><img src="'+W+`" alt="zsh配置内置插件" loading="lazy"></p><ul><li>第三方自定义插件配置</li></ul><blockquote><p>可以通过<code>git</code>克隆到自定义插件目录中，也可以到github上面去手动下载后，解压缩之后将资源放在自定义插件目录中。</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># zsh-syntax-highlighting</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitee.com/mirrors/zsh-syntax-highlighting.git</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${ZSH_CUSTOM}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/plugins/zsh-syntax-highlighting</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># zsh-autosuggestions</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitee.com/mirrors/zsh-autosuggestions.git</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${ZSH_CUSTOM}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/plugins/zsh-autosuggestions</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><blockquote><p><code>zsh-autosuggestions</code>(提示插件)，会自动提示之前输入过的</p><p><code>zsh-syntax-highlighting</code>(语法高亮)，如果输入指令是正确的会高亮提示，这两个需要安装。(上图已先配置)</p></blockquote><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li><p><code>.oh-my-zsh</code>目录下的<code>plugins</code>和<code>themes</code>是<code>oh-my-zsh</code>自带提供的所有配套插件和主题，可以选择性地配置才能启用。</p></li><li><p><code>.oh-my-zsh</code>目录下的<code>custom</code>文件中的<code>plugins</code>和<code>themes</code>是第三方自定义插件和主题的存放目录。</p></li><li><p>在<code>~/.zshrc</code>中配置的插件和主题，会优先从内置插件和主题从寻找，没有的话再找自定义插件，找不到的话会提示没有配置。</p></li></ul></div><h3 id="设置自动随机应用主题" tabindex="-1">设置自动随机应用主题 <a class="header-anchor" href="#设置自动随机应用主题" aria-label="Permalink to &quot;设置自动随机应用主题&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">提示</p><ul><li><p>参考来源: <a href="https://github.com/ohmyzsh/ohmyzsh?tab=readme-ov-file#selecting-a-theme" target="_blank" rel="noreferrer">前往官网查看</a></p></li><li><p>在开启一个<code>zsh</code>终端实例的时候，会随机从主题资源中应用一个主题样式。只需要配置<code>~/.zshrc</code>文件中的<code>ZSH_THEME=&quot;random&quot;</code>即可。</p></li></ul></div><h3 id="本地化-正常显示中文" tabindex="-1">本地化(正常显示中文) <a class="header-anchor" href="#本地化-正常显示中文" aria-label="Permalink to &quot;本地化(正常显示中文)&quot;">​</a></h3><blockquote><p>通过 <code>vim ~/.zshrc</code> 添加下面的配置</p></blockquote><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LANG</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zh_CN.UTF-8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LC_ALL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">zh_CN.UTF-8</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p>重新加载一下配置文件: <code>source ~/.zshrc</code></p></blockquote><p><img src="`+$+'" alt="设置地区和语言" loading="lazy"></p><blockquote><p>如果再不显示中文, 就设置终端的 <code>外观 &gt; 语言 &amp; 字体</code></p></blockquote><h2 id="配置-git-关联-github-仓库" tabindex="-1">配置 git 关联 <code>github</code> 仓库 <a class="header-anchor" href="#配置-git-关联-github-仓库" aria-label="Permalink to &quot;配置 git 关联 `github` 仓库&quot;">​</a></h2><h3 id="配置-git-用户信息" tabindex="-1">配置 Git 用户信息 <a class="header-anchor" href="#配置-git-用户信息" aria-label="Permalink to &quot;配置 Git 用户信息&quot;">​</a></h3><blockquote><p>在使用 Git 之前，需要配置你的用户名和邮箱地址。这些信息会与每次提交的记录绑定。</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;你的用户名&quot;</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user.email</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;你的邮箱&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p><code>--global</code> 表示这两个设置将应用于你所有的 Git 仓库。如果你想为某个特定仓库使用不同的用户名或邮箱，可以在仓库目录下不加 --global 进行设置。</p></blockquote><blockquote><p>可以通过以下命令查看当前的配置：</p></blockquote><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="创建-github-仓库" tabindex="-1">创建 <code>GitHub</code> 仓库 <a class="header-anchor" href="#创建-github-仓库" aria-label="Permalink to &quot;创建 `GitHub` 仓库&quot;">​</a></h3><blockquote><p>仓库创建完成后，复制仓库的<code>ssh</code>地址。</p></blockquote><h3 id="本地初始化仓库" tabindex="-1">本地初始化仓库 <a class="header-anchor" href="#本地初始化仓库" aria-label="Permalink to &quot;本地初始化仓库&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="添加远程仓库" tabindex="-1">添加远程仓库 <a class="header-anchor" href="#添加远程仓库" aria-label="Permalink to &quot;添加远程仓库&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> githubware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 仓库的ssh连接地址</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="配置-ssh-认证方式" tabindex="-1">配置 <code>ssh</code> 认证方式 <a class="header-anchor" href="#配置-ssh-认证方式" aria-label="Permalink to &quot;配置 `ssh` 认证方式&quot;">​</a></h3><blockquote><p>可以通过 <code>HTTP</code> 的方式连接提交，但是每次都需要认证填写密码，这就很不方便。<code>ssh</code>只需要配置好秘钥，每次即可直接提交。</p></blockquote><ol><li>生成和配置密钥对（如果尚未生成）</li></ol><blockquote><p>如果已经生成过密钥对，则将<code>~/.ssh/*.pub</code>【公钥】文件内容复制到<code>github</code>的个人设置中配置秘钥即可。【私钥】是本地用来跟服务器建立安全连接时验证【秘钥对】使用的，不能反过来。</p></blockquote>',51)),i("blockquote",null,[i("p",null,[s[28]||(s[28]=a("配置秘钥有两种签名算法，一种是")),s[29]||(s[29]=i("code",null,"ed25519",-1)),l(e,{type:"warning",text:"旧"}),s[30]||(s[30]=a("，一种是")),s[31]||(s[31]=i("code",null,"rsa",-1)),l(e,{type:"success",text:"新"}),s[32]||(s[32]=a("，任选一种，最终都可以生成一个公钥和私钥。"))])]),s[47]||(s[47]=n(`<div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;你的github电子邮箱&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/xxx.pub</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 复制这个文件的内容添加到github的个人配置中</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="2"><li>测试 <code>ssh</code> 连接 <img src="`+L+`" alt="测试ssh配置" loading="lazy"></li></ol><blockquote><p>如果连接成功，你会看到 GitHub 的欢迎信息。</p></blockquote><ol start="3"><li>添加文件并提交</li></ol><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello world&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> README.md</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> commit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;initial repo&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> githubware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果失败，可以看一下本地仓库的分支是否不对</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reflog</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不对的话，可以切换到正确的分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> githubware</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --allow-unrelated-histories</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 合并无关历史</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><blockquote><p>至此就完成了<code>git</code>关联<code>github</code>仓库的配置。</p></blockquote>`,6))])}const is=t(H,[["render",G]]);export{ss as __pageData,is as default};
