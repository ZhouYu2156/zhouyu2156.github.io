import{_ as a,c as i,o as e,aF as n}from"./chunks/framework.DEmh6Vhl.js";const k=JSON.parse('{"title":"常用第三方库","description":"","frontmatter":{},"headers":[],"relativePath":"web/后端开发/nodejs/常用第三方库.md","filePath":"web/后端开发/nodejs/常用第三方库.md","lastUpdated":1744689573000}'),t={name:"web/后端开发/nodejs/常用第三方库.md"};function l(p,s,d,h,o,r){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="常用第三方库" tabindex="-1">常用第三方库 <a class="header-anchor" href="#常用第三方库" aria-label="Permalink to &quot;常用第三方库&quot;">​</a></h1><h2 id="一、nrm" tabindex="-1">一、nrm <a class="header-anchor" href="#一、nrm" aria-label="Permalink to &quot;一、nrm&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">说明：</p><blockquote><p>官方解释：nrm 是官方开发的 <code>npm registry</code> 管理工具, 可以轻松地查看和切换当前使用的仓库源.</p></blockquote></div><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls　　</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 查看所有的支持源（有*号的表示当前所使用的源,以下[name]表示源的名称）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [name]　　    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将npm下载源切换成指定的源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help　　</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # 查看nrm帮助</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> home</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [name]　　   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 跳转到指定源的官网</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [name </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">url]</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 添加自定义源（name是自定义源的名字，ulr是自定义源的url）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> del</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [name]        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除源</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nrm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [name]       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自动测试所有镜像源速度</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="使用时遇到的疑问" tabindex="-1">使用时遇到的疑问? <a class="header-anchor" href="#使用时遇到的疑问" aria-label="Permalink to &quot;使用时遇到的疑问?&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">注意：</p><blockquote><p>通过 <code>nrm use [name]</code> 切换镜像之后，再 <code>nrm ls</code> 查看镜像列表时，如果 * 号 （代表我们当前使用的镜像源） 消失, 那么按照下面的操作即可恢复正常</p></blockquote></div><div class="tip custom-block"><p class="custom-block-title">提示：</p><blockquote><p><s>例 nodejs/node_global/node_modules/nrm 在该目录下找到 cli.js，打开 cli.js 文件，找到函数 onList（文件 132 行）</s></p></blockquote><blockquote><p>前面这种通过修改源代码的方式已经失效了,可以通过帮助命令来查看怎么使用, 可以通过 <code>nrm current</code> 来查看自己正在使用的镜像源是哪个</p></blockquote><blockquote><p>另外, 我已经亲测, 通过 <code>cmd</code> 或者 <code>bash</code> 终端运行 <code>nrm ls</code> 能够正常显示 <code>*</code> （即 <code>*</code> 标记的就是我们正在使用的 <code>npm镜像源</code> ）. <code>记录于 2024/1/27</code></p></blockquote></div><h2 id="二、ts-node" tabindex="-1">二、ts-node <a class="header-anchor" href="#二、ts-node" aria-label="Permalink to &quot;二、ts-node&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">说明：</p><blockquote><p>不编译生成 <code>.js</code> 文件, 看起来像直接运行 <code>.ts</code> 文件一样, 但每次在写完代码之后都需要手动去执行一次命令</p></blockquote></div><h3 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ts-node</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">          # 全局安装 nrm 工具</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-q4rn-" id="tab-w3N8lFh" checked><label data-title="命令格式" for="tab-w3N8lFh">命令格式</label><input type="radio" name="group-q4rn-" id="tab-dRvaMar"><label data-title="示例" for="tab-dRvaMar">示例</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ts-node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 文件名.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ts-node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h2 id="三、nodemon" tabindex="-1">三、nodemon <a class="header-anchor" href="#三、nodemon" aria-label="Permalink to &quot;三、nodemon&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">说明：</p><blockquote><p>能够“自动编译”TS 代码, 根据 TS、JS 文件代码的变更实时热更新（重启服务）, 方便在终端查看效果, 算是 <code>ts-node</code> 的升级版, 但是它依赖于 <code>ts-node</code>, 也就是说, 需要提前安装 <code>ts-node</code>.</p></blockquote></div><h3 id="安装-2" tabindex="-1">安装 <a class="header-anchor" href="#安装-2" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodemon</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="使用-1" tabindex="-1">使用 <a class="header-anchor" href="#使用-1" aria-label="Permalink to &quot;使用&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">说明：</p><blockquote><p>直接运行 <code>nodemon</code> 不接参数的话, 默认运行的是 <code>index.js</code> 文件, 如果想指定运行的文件, 可以在命令后面加上参数, 例如 <code>nodemon index.ts</code>. 更多使用方法可以使用帮助命令 <code>nodemon --help</code> 来查看.</p></blockquote></div><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-L4fOQ" id="tab-DDesbb2" checked><label data-title="默认运行的文件" for="tab-DDesbb2">默认运行的文件</label><input type="radio" name="group-L4fOQ" id="tab-V-42QbZ"><label data-title="运行其他文件" for="tab-V-42QbZ">运行其他文件</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodemon</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">               # 默认运行 index.js 文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodemon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index.ts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div></div><h2 id="四、nvm" tabindex="-1">四、nvm <a class="header-anchor" href="#四、nvm" aria-label="Permalink to &quot;四、nvm&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">注意：</p><blockquote><p>这个不是 npm 包，需要单独下载的工具，工具安装、使用的教程推荐：<a href="https://blog.csdn.net/qq_22182989/article/details/125387145" target="_blank" rel="noreferrer">参考博客</a></p></blockquote></div><div class="info custom-block"><p class="custom-block-title">介绍：</p><blockquote><p>主要功能：可以使用命令行方式更新<code>nodejs</code>版本</p></blockquote><blockquote><p>NVM 允许用户：</p></blockquote><ul><li>使用简单的命令在本地下载任何远程长期支持 （LTS） 版本的 Node.js。</li><li>直接从命令行在 Node.js 的多个版本之间轻松切换。</li><li>设置别名以轻松在不同下载版本的 <code>Node.js</code> 之间切换。</li></ul></div><h2 id="五、gnvm" tabindex="-1">五、gnvm <a class="header-anchor" href="#五、gnvm" aria-label="Permalink to &quot;五、gnvm&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">推荐：</p><blockquote><p><a href="http://ksria.com/gnvm/" target="_blank" rel="noreferrer">去官网看看</a></p></blockquote></div><div class="tip custom-block"><p class="custom-block-title">提示：</p><blockquote><p>该工具需要单独下载，它只有一个文件，而且切换 <code>Node.js</code> 版本的方式比上面这种工具更简单，它的安装、使用教程推荐：<a href="https://blog.csdn.net/skybulex/article/details/125512007" target="_blank" rel="noreferrer">参考博客</a></p></blockquote><blockquote><p><code>gnvm</code> 和 <code>nvm</code> 二选一，总的来说 <code>gnvm</code> 类似于是对 <code>nvm</code> 的二次封装，让一些常用操作的命令都更容易记忆和使用.</p></blockquote></div><h2 id="六、tsc" tabindex="-1">六、tsc <a class="header-anchor" href="#六、tsc" aria-label="Permalink to &quot;六、tsc&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">作用：</p><blockquote><p>主要功能：编译 <code>typescript</code> 脚本生成同名的 <code>javascript</code> 脚本.</p></blockquote></div><h3 id="安装-3" tabindex="-1">安装 <a class="header-anchor" href="#安装-3" aria-label="Permalink to &quot;安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> typescript</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">           # 需要下载的包</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="使用-2" tabindex="-1">使用 <a class="header-anchor" href="#使用-2" aria-label="Permalink to &quot;使用&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="复制" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tsc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./main.ts</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # 后面可以接其他参数，详情参考 ts 语言官网</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="info custom-block"><p class="custom-block-title">更多用法：</p><blockquote><p>推荐：<a href="https://aka.ms/tsc" target="_blank" rel="noreferrer"><code>tsc --help</code> 引导的帮助文档</a></p></blockquote><blockquote><p><code style="color:orangered;">or</code></p></blockquote><blockquote><p>推荐：<a href="https://www.typescriptlang.org/docs/handbook/compiler-options.html" target="_blank" rel="noreferrer">去看官方文档对编译选项的说明</a></p></blockquote></div><h2 id="七、发布-npm-包" tabindex="-1">七、发布 npm 包 <a class="header-anchor" href="#七、发布-npm-包" aria-label="Permalink to &quot;七、发布 npm 包&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">推荐</p><blockquote><p>规范参考：<a href="https://classic.yarnpkg.com/en/docs" target="_blank" rel="noreferrer">前往官网</a></p></blockquote></div>`,38)]))}const b=a(t,[["render",l]]);export{k as __pageData,b as default};
